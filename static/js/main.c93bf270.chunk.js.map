{"version":3,"sources":["components/movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","useState","isLoading","setIsLoading","movies","setMovies","getMovies","a","axios","get","data","console","log","useEffect","movie","medium_cover_image","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAmCeA,MA/Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAI1C,OACI,qBAAKC,UAAY,QAAjB,SACI,sBAAKA,UAAY,cAAjB,UACI,qBAAKC,IAAOH,EAAQI,IAAON,EAAOA,MAASA,IAC3C,oBAAII,UAAY,eAAhB,SAAgCJ,IAChC,oBAAII,UAAY,cAAhB,SAA+BL,IAC/B,oBAAIK,UAAY,gBAAhB,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAChB,OAAM,oBAAkBL,UAAY,gBAA9B,SAA+CI,GAApCC,QAGzB,mBAAGL,UAAY,iBAAf,SAAiCH,EAAQS,MAAM,EAAE,a,MC6BlDC,MA3Cf,WAEE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAS,uCAAE,8BAAAC,EAAA,sEAE0BC,IAAMC,IAAI,0DAFpC,gBAEQL,EAFR,EAERM,KAAQA,KAAQN,OACvBO,QAAQC,IAAIR,GACZC,EAAUD,GACVD,GAAa,GALE,2CAAF,qDAcf,OALAU,qBAAU,WACRP,MACC,IAEHK,QAAQC,IAAI,uBAEV,yBAASnB,UAAY,YAArB,SACES,EACD,qBAAKT,UAAY,SAAjB,SACE,sBAAMA,UAAY,cAAlB,0BAEF,qBAAKA,UAAY,SAAjB,SACGW,EAAOR,KAAI,SAACkB,GACV,OAAO,cAAC,EAAD,CAGP1B,KAAQ0B,EAAM1B,KACdC,MAASyB,EAAMzB,MACfC,QAAWwB,EAAMxB,QACjBC,OAAUuB,EAAMC,mBAChBvB,OAAUsB,EAAMtB,QANTsB,EAAME,YCtBRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.c93bf270.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './movie.css'\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n\r\n    \r\n\r\n    return(\r\n        <div className = \"movie\">\r\n            <div className = \"movie__data\">\r\n                <img src = {poster} alt = {title} title = {title}></img>\r\n                <h3 className = \"movie__title\">{title}</h3>\r\n                <h5 className = \"movie__year\">{year}</h5>\r\n                <ul className = \"movie__genres\">\r\n                    {genres.map((genre, index)=>{\r\n                        return<li key = {index} className = \"genres__genre\">{genre}</li>\r\n                    })}\r\n                </ul>\r\n                <p className = \"moive__summary\">{summary.slice(0,180)}</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n\r\n\r\nexport default Movie;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Movie from './components/movie';\nimport './App.css'\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n\n  const getMovies =async () =>{\n    //아래 es6문법. movies.data.data.movies에 접근한 값임 ㄷㄷ\n    const {data : {data : {movies}}} = await axios.get('https://yts-proxy.nomadcoders1.now.sh/list_movies.json');\n    console.log(movies);\n    setMovies(movies); //렌더링 + 1번\n    setIsLoading(false); //이러면 movies data를 가져오는 동안에는 loading 중이었다가, 가져왔을 경우 안보이게 함. 렌더링 + 1번\n  }\n\n  //componentDidMount 역할\n  useEffect(() =>{\n    getMovies();\n  }, [])\n\n  console.log(\"render 실행\");\n  return (\n    <section className = \"container\">\n     {isLoading ? \n     <div className = \"loader\">\n       <span className = \"loader_text\">Loading...</span>\n     </div> : \n     <div className = \"movies\">\n       {movies.map((movie) =>{\n          return <Movie\n          key = {movie.id} \n          //id = {movie.id} 넣을 필요가 없남\n          year = {movie.year} \n          title = {movie.title} \n          summary = {movie.summary} \n          poster = {movie.medium_cover_image}\n          genres = {movie.genres}/>;\n        })}\n     </div>\n       }\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}